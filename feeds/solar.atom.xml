<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Breaking Bytes - Solar</title><link href="https://breakingbytes.github.io/" rel="alternate"></link><link href="https://breakingbytes.github.io/feeds/solar.atom.xml" rel="self"></link><id>https://breakingbytes.github.io/</id><updated>2024-08-23T01:10:00-07:00</updated><subtitle>My personal blog about &lt;a rel="me" href="https://fosstodon.org/@mikofski"&gt;me&lt;/a&gt;</subtitle><entry><title>PV Electric Mismatch in Silicon-Cell PV - Part 2</title><link href="https://breakingbytes.github.io/pv-electric-mismatch-in-silicon-cell-pv-part-2.html" rel="alternate"></link><published>2024-08-23T01:10:00-07:00</published><updated>2024-08-23T01:10:00-07:00</updated><author><name>Mark Mikofski</name></author><id>tag:breakingbytes.github.io,2024-08-23:/pv-electric-mismatch-in-silicon-cell-pv-part-2.html</id><summary type="html">&lt;p&gt;What happens when shade cuts across PV strings?&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Note: This post is part of a joint blog with my colleague Kurt Rhee:
&lt;a href="https://kurt-rhee.github.io/2024/08/26/a-primer-on-electrical-mismatch"&gt;Primer on Electrical Mismatch&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id="the-many-shades-of-pv-electrical-mismatch"&gt;The many shades of PV electrical mismatch&lt;/h1&gt;
&lt;p&gt;Effects from shade are complicated, but can be summarized in two orthogonal categories:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#shade-parallel-to-strings"&gt;shade parallel to strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shade-perpendicular-to-strings"&gt;shade perpendicular to strings&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These categories were defined in the Fast Shade Model [&lt;a href="#references"&gt;1, 2&lt;/a&gt;]
developed by Dr. Bennet Meyers after simulating hundreds of different shade
patterns and grouping them by their electrical mismatch. &lt;/p&gt;
&lt;h2 id="shade-parallel-to-strings"&gt;shade parallel to strings&lt;/h2&gt;
&lt;p&gt;One example of shade across all modules that is parallel to strings, is row-to-row
shade in fixed-tilt systems, typically in winter. When I originally wrote
about &lt;a href="https://breakingbytes.github.io/electric-mismatch-in-silicon-cell-pv-is-not-intuitive.html"&gt;PV electrical mismatch&lt;/a&gt;, I analyzed
this type of shade using &lt;a href="https://sunpower.github.io/PVMismatch/"&gt;PVMismatch&lt;/a&gt;
to simulate shade across the bottom row of a single string of 10 modules in a
10 string system. The conclusion of that post was that the string performed as
well as the most shaded cell, so even though only the bottom cells were shaded,
the modules in the string lost most of their power. I shaded the bottom cells
80% to simulate only diffuse light, and the string lost roughly 80% of output.
The other 9 strings operated at full capacity, so the system only lost 8%. The
&lt;a href="https://www.nist.gov/el/energy-and-environment-division-73200/heat-transfer-alternative-energy-systems/photovoltaic-1"&gt;NIST ground mount array&lt;/a&gt;
is an example of a system that will have row-to-row shade in winter that will
cause most of the strings to lose almost all of their output even when only
the bottom row of cells is shaded.&lt;/p&gt;
&lt;p&gt;&lt;img alt="NIST Google" src="./images/nist-ground-array.png"&gt;&lt;/p&gt;
&lt;h2 id="shade-not-parallel-to-strings"&gt;shade not parallel to strings&lt;/h2&gt;
&lt;p&gt;However, that post also contained a picture of a rooftop with non-uniform shade
that was not consistent across each module of the string. The shade cast from
the roofline cut diagonally across the modules in the string, which was wrapped
in two rows to fit.&lt;/p&gt;
&lt;p&gt;&lt;img alt="non uniform shade on a roof" src="./images/20150923_170418.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I didn't analyze the shade from this system in that post, so it raises the
question whether the rule of thumb I recommended would still apply?&lt;/p&gt;
&lt;h2 id="shade-perpendicular-to-strings"&gt;shade perpendicular to strings&lt;/h2&gt;
&lt;p&gt;To simplify the question, the rest of this post analyzes a PV system with a
shade obstacle like a wind turbine, a telephone pole, or a chimney, that casts shade
perpendicular to the strings. My analysis is in this Jupyter notebook on Google Colaboratory:
&lt;a href="https://colab.research.google.com/drive/1b2Ll7G-4WBKPl57m-FPBhU8MLjLOTfIb"&gt;&lt;code&gt;mismatch_vs_strings.ipynb&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TL;DR: When shade cuts perpendicular to strings, cells go into reverse bias,
bypass diodes activate in the shaded submodules, and the other modules operate
at higher voltage to match the voltage of unshaded parallel strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I simulated perpendicular shade on the first half of the first module in the
string, while the rest of the strings were unshaded. For example, this shade could be caused by a
chimney. Then I increased the number of unshaded strings to see if it changed
the effect. The effect of a shadow perpendicular to the string caused bypass
diodes to trigger. Adding more strings did not stop the bypass diodes from triggering, even after 20 parallel
strings. The IV curve of the system had a kink until 4 unshaded parallel strings were added, but after 9 unshaded parallel strings were added, the IV curve
appeared unaffected. After 19 unshaded parallel strings were added, the total power loss was only 0.85% for the system
compared to unshaded. However, the power loss in the shaded string was about 15%.&lt;/p&gt;
&lt;p&gt;Here is the IV curve of the 20 string PV system with perpendicular shade on the
1st module of the 1st string from the Jupyter notebook. It looks unaffected!&lt;/p&gt;
&lt;p&gt;&lt;img alt="20 string PV system with cross-string shade" src="./images/cross-string-mismatch/pvsystem-20strings.png"&gt;&lt;/p&gt;
&lt;p&gt;Now check out the IV curve of the string with the shaded module. It should
be generating about 3200[W], but even though it's lost about 500[W], it
still operates at 5[A], nearly the same current as the other strings. It
still has to operate at the same voltage as the other strings, 538.7[V] in
this example, so how does it do it with 2 bypass diodes activated?&lt;/p&gt;
&lt;p&gt;&lt;img alt="20 string PV system with cross-string shade" src="./images/cross-string-mismatch/pvstring-20strings.png"&gt;&lt;/p&gt;
&lt;p&gt;A look at the module IV curves tells the rest of the story. The shaded module
still has to carry the 5[A] of the string, but 2 bypass diodes are triggered
so the voltage is down 75%. Note: these are SunPower/Maxeon 320[W] modules,
that have 96-cells in 8-columns with 3 bypass diodes in a 24-48-24 cell arrangement.&lt;/p&gt;
&lt;p&gt;&lt;img alt="20 string PV system with cross-string shade" src="./images/cross-string-mismatch/pvmod0-20strings.png"&gt;&lt;/p&gt;
&lt;p&gt;However, the unshaded modules make up for the lost voltage in the shaded
module by operating just above the max power point. This is why the string
is operating at 5[A], to increase the voltage in the unshaded strings.
Very clever! Go team! Luckily for the shaded module, that current is
also very close to its max power point, which is only down 75% thanks
to the activated bypass diodes. Recall in the parallel shade scenario,
the entire string was down.&lt;/p&gt;
&lt;p&gt;&lt;img alt="20 string PV system with cross-string shade" src="./images/cross-string-mismatch/pvmod1-20strings.png"&gt;&lt;/p&gt;
&lt;p&gt;Please check out &lt;a href="https://colab.research.google.com/drive/1b2Ll7G-4WBKPl57m-FPBhU8MLjLOTfIb"&gt;&lt;code&gt;mismatch_vs_strings.ipynb&lt;/code&gt;&lt;/a&gt;
because the 1-string example isn't limited by the voltage of parallel strings, so it's free to operate at the max power
point, and the losses are lower. Recall in the 20-string example, the shaded string lost about 15%, but in the 1-string
example, the loss was only about 8%. Another variation is allowing the shade to cross two or more strings. I covered
a scattershot of scenarios and found that parallel string voltage began to dominate sowmhere between 5 to 10 strings.
Of course, that only applies in this contrived example, but it was interesting nonetheless.&lt;/p&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I wish I could say, that's all there is to it, but as I said in my first blog post,
electrical mismatch in crystalline silicon is very counter-intuitive.
That's why I created PVMismatch to begin with. I was tired of guessing and
being wrong. So don't guess. Simulate with confidence, try PVMismatch, and
let me know what you learn!&lt;/p&gt;
&lt;h2 id="epilogue"&gt;Epilogue&lt;/h2&gt;
&lt;p&gt;So back to that rooftop with the diagonal shade line. It's a bit of both
categories right? How do you think it will perform? Will it lose nearly
all of its power or will bypass diodes active and save the day? Or maybe
something in between or completely different. Try to analyze it using
PVMismatch. If you need help I analyzed it in this Google Colab notebook:
&lt;a href="https://colab.research.google.com/drive/1wOSF9aNvxUc2t1iduNKN1Dn-vBW_j92w"&gt;&lt;code&gt;nonuniform-rooftop-shade.ipynb&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Meyers, B., Mikofski, M. A., &amp;amp; Anderson, M. (2016). A Fast Parameterized Model for Predicting PV System Performance under Partial Shade Conditions. In IEEE (Ed.), 2016 IEEE 43rd Photovoltaic Specialists Conference (PVSC) (pp. 3173–3178). IEEE. &lt;a href="https://doi.org/10.1109/PVSC.2016.7750251"&gt;https://doi.org/10.1109/PVSC.2016.7750251&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Meyers, B., &amp;amp; Mikofski, M. A. (2017). Accurate Modeling of Partially Shaded PV Arrays. In IEEE (Ed.), 2017 IEEE 44th Photovoltaic Specialist Conference (PVSC) (Vols. 2017-June, pp. 3354–3359). IEEE. &lt;a href="https://doi.org/10.1109/PVSC.2017.8521559"&gt;https://doi.org/10.1109/PVSC.2017.8521559&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="Solar"></category><category term="solar"></category><category term="modeling"></category><category term="code"></category></entry><entry><title>Electric Mismatch in Silicon-Cell PV is Not Intuitive</title><link href="https://breakingbytes.github.io/electric-mismatch-in-silicon-cell-pv-is-not-intuitive.html" rel="alternate"></link><published>2019-10-18T15:23:00-07:00</published><updated>2019-10-18T15:23:00-07:00</updated><author><name>Mark Mikofski</name></author><id>tag:breakingbytes.github.io,2019-10-18:/electric-mismatch-in-silicon-cell-pv-is-not-intuitive.html</id><summary type="html">&lt;p&gt;Why does shade just across the bottom row of cells cause 90% power loss?&lt;/p&gt;</summary><content type="html">&lt;h1 id="uniform-versus-non-uniform-shade"&gt;Uniform Versus Non-Uniform Shade&lt;/h1&gt;
&lt;p&gt;The counter-intuitive effect of shade on photovoltaic (PV) solar energy panels
surprises most people.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Shade across a relatively small portion of the panel can cause a
disproportionately large power loss.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For example, shade across just the bottom row of cells, only 6 cells out of 60,
merely 10% of the PV panel, will cause 90% power loss! Why does this happen?
Did you think it would cause only 10% power loss? Why isn't power loss &lt;em&gt;linear&lt;/em&gt;
with shade?&lt;/p&gt;
&lt;p&gt;OK, to be fair, if the entire array is uniformly shaded or merely illuminated
with a less intense light, then the decrease in power &lt;em&gt;would&lt;/em&gt; be proportional
to the decrease in light intensity. For example if a giant rain cloud passed
over the sun, or the sun slowly sank behind a mountain, so that the same light
was cast everywhere, but just lower intensity, say 50%, then the power would be
50% lower as well.&lt;/p&gt;
&lt;p&gt;So just to be &lt;em&gt;completely clear&lt;/em&gt;, in this post we are &lt;strong&gt;not&lt;/strong&gt; going to talk
about the effects of changes in light intensity that are totally uniform
everywhere, but instead we're going to focus on what happens when there are
non-uniform differences in light intensity across the PV system. Here's an
example of a PV system with non-uniform shade.&lt;/p&gt;
&lt;p&gt;&lt;img alt="non uniform shade on a roof" src="./images/20150923_170418.jpg"&gt;&lt;/p&gt;
&lt;h1 id="pv-primer"&gt;PV Primer&lt;/h1&gt;
&lt;p&gt;In PV lingo, a panel is called a &lt;strong&gt;module&lt;/strong&gt; which, in most silicon PV modules,
is made up of smaller solar &lt;strong&gt;cells&lt;/strong&gt; connected in series. Modules are most
often connected in series to form &lt;strong&gt;strings&lt;/strong&gt; of modules. Strings are connected
in parallel to an &lt;strong&gt;inverter&lt;/strong&gt; which converts DC from the panels to AC which is
sent to the grid.&lt;/p&gt;
&lt;p&gt;Here's a typical PV system at the National Institute of Standards and
Technology (NIST) in Gaithersburg, MD, which has a single 260-kW inverter
connected to 96 strings, each with 12
&lt;a href="https://pvfree.herokuapp.com/cec_modules/14738/"&gt;Sharp NU-U235F2&lt;/a&gt; 235-W
modules. The first four rows are 5 modules deep, but the last row is only 4
modules deep. The modules are all in landscape and have straight stringing:&lt;/p&gt;
&lt;p&gt;&lt;img alt="NIST Google" src="./images/nist-ground-array.png"&gt;
&lt;img alt="NIST ground mount racks" src="./images/ground-mount-racks.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Here's a simulation from
&lt;a href="https://www.dnvgl.com/services/solar-pv-plant-design-software-solarfarmer-140689"&gt;SolarFarmer&lt;/a&gt;
showing the shadows cast by the eastern trees.&lt;/p&gt;
&lt;p&gt;&lt;img alt="NIST Google" src="./images/NIST_SolarFarmer_trees.png"&gt;
&lt;img alt="NIST Google" src="./images/NIST_Google.png"&gt;&lt;/p&gt;
&lt;h2 id="pv-cells-and-reverse-bias-breakdown"&gt;PV Cells and Reverse Bias Breakdown&lt;/h2&gt;
&lt;p&gt;The cells in a PV module can be considered roughly as a current source in
parallel with a diode and some resistive elements. Diodes are semiconductors.
In other words, they only conduct current in one direction, called the forward
bias. When a negative voltage, or a reverse bias, is applied to the cell, the
semiconductor won't conduct a current. However, if enough reverse bias is
applied, all semiconductors will eventually breakdown, and carry a current.
This phenomema is called &lt;strong&gt;reverse bias breakdown&lt;/strong&gt;, and the &lt;strong&gt;breakdown
voltage&lt;/strong&gt; varies between cell technology. A typical front contact p-type
silicon solar cell may breakdown at around -20 volts, while a back-contact
n-type silicon solar cell may breakdown at -5 volts. There are many factors,
beyond the scope of this primer, that affect reverse bias breakdown, such as
purity of the substrate as well as type and concentration of dopant. The most
important thing to understand about reverse bias breakdown is this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When a cell is in reverse breakdown, it can carry nearly any current, but
because the voltage is negative, then the cell will dissipate energy and will
get hot as it exchanges heat with the environment around it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="the-single-diode-model"&gt;The Single Diode Model&lt;/h3&gt;
&lt;p&gt;The electric circuit analog used to describe a solar cell is called the single
diode model. Here's a schematic:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Single Diode Model" src="https://www.sandia.gov/app/uploads/sites/243/2022/11/Single-Diode-EC2.png"&gt;&lt;/p&gt;
&lt;p&gt;Image credit:
&lt;a href="https://pvpmc.sandia.gov/modeling-steps/2-dc-module-iv/diode-equivalent-circuit-models/"&gt;Sandia PV Performance Modeling Collaborative&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The solar cell current-voltage relation, or IV curve, shown below demonstrates
the forward and reverse bias characteristics of a solar cell. The single diode
model matches this response close enough to be used for predictions.&lt;/p&gt;
&lt;p&gt;&lt;img alt="3-quadrant IV curve" src="https://www.pveducation.org/sites/default/files/PVCDROM/Modules/Images/NONIDEAL.gif"&gt;&lt;/p&gt;
&lt;p&gt;Image credit:
&lt;a href="https://www.pveducation.org/pvcdrom/modules-and-arrays/mismatch-effects"&gt;PV Education, UNSW, ASU, &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="pv-modules-and-bypass-diodes"&gt;PV Modules and Bypass Diodes&lt;/h2&gt;
&lt;p&gt;PV modules are usually designed with bypass diodes to avoid energy loss and hot
spots due to cells in reverse bias breakdown by allowing current to bypass the
cells in reverse bias breakdown. The figure below shows a 72-cell module with
3 bypass diodes, each in parallel with a 24-cell submodule (&lt;em&gt;aka&lt;/em&gt;: substring).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Circuit diagram of the solar module with 72 cells" src="./images/Circuit-diagram-of-the-solar-module-with-72-cells_W640.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Credit: &lt;em&gt;Analysis of Power Loss for Crystalline Silicon Solar Module during the
Course of Encapsulation&lt;/em&gt; by Hong Yang &lt;em&gt;et al.&lt;/em&gt;, April 2015, International
Journal of Photoenergy 2015:1-5 &lt;a href="https://doi.org/10.1155/2015/251615"&gt;DOI: 10.1155/2015/251615&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When the voltage in the submodule exceeds a small trigger voltage in the bypass
diode, due to a cell or cells in reverse bias breakdown, then current will flow
through the bypass diode, bypassing the entire submodule. For example, if one
cell in the submodule is in reverse bias breakdown at -20 volts, and the other
23 cells are all normal at 0.6 volts, then the total voltage of the submodule
is -6.2 volts.&lt;/p&gt;
&lt;div class="math"&gt;$$\begin{align}V_{sub} &amp;amp;= -20[V] + 23\left(0.6[V]\right) \\
&amp;amp;= -20[V] + 13.8[V] = -6.2[V]\end{align}$$&lt;/div&gt;
&lt;p&gt;So if the trigger voltage of the bypass diode is -0.5 volts, then the current
will pass through the bypass diode. If the module current is 6 amps, then the
bypass diode dissipates only 3 watts and avoids losing 36 watts from the bad
submodule. What's more important than saving energy though, is that the bypass
diode is also a safety device, because the single cell in reverse bias
breakdown would have dissipated 120 watts, which could potentially cause a
fire, and most likely would cause permanent damage to the cell and the module
encapsulant or backsheet. &lt;/p&gt;
&lt;h1 id="electric-circuit-theory"&gt;Electric Circuit Theory&lt;/h1&gt;
&lt;p&gt;So why does non-uniform shade cause this non-linear effect? If we consider the
PV system as an electric circuit, then it must obey the following two laws:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Ohm%27s_law"&gt;Ohm's Law&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Kirchhoff%27s_circuit_laws"&gt;Kirchhoff's Law&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ohms-law"&gt;Ohms Law&lt;/h2&gt;
&lt;p&gt;According to Ohm's law, because the cells and modules in a PV system are all in
series, then they must all carry the same current, &lt;span class="math"&gt;\(I\)&lt;/span&gt;, the total voltage of
each module, &lt;span class="math"&gt;\(V_{mod}\)&lt;/span&gt;, is the sum of the cell voltages in that module, and the
total string voltage, &lt;span class="math"&gt;\(V_{str}\)&lt;/span&gt;, is the sum of the module voltages in the string.
In the equation below, &lt;span class="math"&gt;\(Z\)&lt;/span&gt; represents the impedance of each cell in a module or
each module in a string.&lt;/p&gt;
&lt;div class="math"&gt;$$V = \sum V = I \sum Z$$&lt;/div&gt;
&lt;p&gt;The actual relation in a cell is really a bit more complicated than &lt;span class="math"&gt;\(V=IZ\)&lt;/span&gt;,
but hopefully this will do to explain electrical mismatch for now. The relation
between the flux of charge and solar cell voltage is described by the
&lt;a href="https://en.wikipedia.org/wiki/Poisson%E2%80%93Boltzmann_equation"&gt;Poisson Energy Transport Equation&lt;/a&gt;
but in practice &lt;a href="#the-single-diode-model"&gt;the single diode model&lt;/a&gt; circuit
discussed above, is a useful analog. For more detail on the single diode model,
see this post on
&lt;a href="./examples-of-implicit-versus-explicit-solutions-for-photovoltaic-solar-energy-systems.html"&gt;examples of implicit vs. explicit solutions for PV systems&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="kirchhoffs-law"&gt;Kirchhoff's Law&lt;/h2&gt;
&lt;p&gt;Kirchhoff's law requires the voltage across all of the parallel strings to be
the same as the voltage across the inverter, and the total current at the
inverter nodes to be the sum of the currents from all parallel strings
connected to it.&lt;/p&gt;
&lt;div class="math"&gt;$$I = \sum I = V\sum{\frac{1}{Z}}$$&lt;/div&gt;
&lt;h1 id="electrical-mismatch"&gt;Electrical Mismatch&lt;/h1&gt;
&lt;p&gt;The combined effect of enforcing Ohm's and Kirchhoff's laws on a PV system that
is partially shaded can cause what's called &lt;em&gt;electrical mismatch&lt;/em&gt;. In other
words, the shaded cells can't &lt;em&gt;match&lt;/em&gt; the current being carried by the rest of
the module, or the string with shaded modules can't carry the same voltage as
the PV system, and therefore the entire system has to find a new operating
condition to satisfy Ohm's and Kirchhoff's laws.&lt;/p&gt;
&lt;h2 id="a-rule-of-thumb"&gt;A Rule of Thumb&lt;/h2&gt;
&lt;p&gt;The counter intuitive behavior of a PV array with partial shade can be
understood by remembering the following rule of thumb:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A submodule will perform as well as its most shaded cell.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Imagine a submodule has the bottom cells completely shaded, so they are only
getting diffuse light, say 10% of the total plane of array irradiance that's
incident on the other cells in the module. The rest of the PV array is
operating normally, so the current and voltage of each string might be 7.8 amps
and 360 volts, assuming the NIST site shown in the &lt;a href="#pv-primer"&gt;PV Primer&lt;/a&gt;
above. So, as described in the section on
&lt;a href="#pv-cells-and-reverse-bias-breakdown"&gt;PV Cells and Reverse Bias Breakdown&lt;/a&gt;,
the two shaded cells can only carry this current in reverse bias breakdown,
which would trigger the bypass diode to activate, and cause the string to lose
one-third of a module's voltage. However, the strings all have to have the same
voltage, and the maximum power point of the system is not going to be at lower
voltage, so the bad submodule can't activate it's bypass diode, and the string
will have to operate at a lower current - the same current as the bad cell.&lt;/p&gt;
&lt;h2 id="pvmismatch"&gt;PVMismatch&lt;/h2&gt;
&lt;p&gt;We can analyze this using &lt;a href="https://sunpower.github.io/PVMismatch/"&gt;PVMismatch&lt;/a&gt;
Python package by SunPower.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: A PV system with just 10% of cells shaded in only 1 string, loses
nearly all of the power in that string.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="script"&gt;Script&lt;/h3&gt;
&lt;p&gt;The following scrpt uses PVMismatch to model a PV system at STC with 10 strings
of 10 &lt;a href="https://pvfree.herokuapp.com/pvmodules/1517/"&gt;SunPower SPR-315E-WHT&lt;/a&gt;
96-cell modules per string. Then analyzes the same system, but with the bottom
row of cells shaded 80%, &lt;em&gt;ie&lt;/em&gt;: only diffuse irradiance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;analyze and plot a 10x10 system with bottom cells of one row shaded&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# import the pvmismatch library&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;pvmismatch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="c1"&gt;# import the matplotlib plotting library&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;matplotlib&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pyplot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;

&lt;span class="c1"&gt;# make a 10x10 system of SPR-E20-315 96-cell panels at stc&lt;/span&gt;
&lt;span class="n"&gt;pvsys&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pvsystem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PVsystem&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# plot the system&lt;/span&gt;
&lt;span class="n"&gt;pvsys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plotSys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# shade the bottom cell of all modules in the 1st string by 80%&lt;/span&gt;
&lt;span class="n"&gt;pvsys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setSuns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cells&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;84&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Ee&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)}})&lt;/span&gt;

&lt;span class="c1"&gt;# plot the btm row shaded system&lt;/span&gt;
&lt;span class="n"&gt;pvsys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plotSys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# btm row shaded system max power&lt;/span&gt;
&lt;span class="n"&gt;pvsys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pmp&lt;/span&gt;
&lt;span class="c1"&gt;# 29607.549997102204&lt;/span&gt;

&lt;span class="c1"&gt;# make a new stc system for comparison&lt;/span&gt;
&lt;span class="n"&gt;pvsys_stc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pvsystem&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PVsystem&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# stc system max power&lt;/span&gt;
&lt;span class="n"&gt;pvsys_stc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pmp&lt;/span&gt;
&lt;span class="c1"&gt;# 32119.317380452303&lt;/span&gt;

&lt;span class="c1"&gt;# calculate loss&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pvsys_stc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pmp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pvsys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pmp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pvsys_stc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pmp&lt;/span&gt;
&lt;span class="c1"&gt;# 0.07820114461332704&lt;/span&gt;

&lt;span class="c1"&gt;# btm row shaded string max power&lt;/span&gt;
&lt;span class="n"&gt;pvsys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pvstrs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pstring&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# 720.6607971888608&lt;/span&gt;

&lt;span class="c1"&gt;# stc string max power&lt;/span&gt;
&lt;span class="n"&gt;pvsys_stc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pvstrs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pstring&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# 3212.7324983909575&lt;/span&gt;

&lt;span class="c1"&gt;# calculate loss&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pvsys_stc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pvstrs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pstring&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pvsys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pvstrs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pstring&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pvsys_stc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pvstrs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Pstring&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# 0.7756860250426105&lt;/span&gt;

&lt;span class="c1"&gt;# plot stc string&lt;/span&gt;
&lt;span class="n"&gt;pvsys_stc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pvstrs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plotStr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gcf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# plot btm row shaded string&lt;/span&gt;
&lt;span class="n"&gt;pvsys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pvstrs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plotStr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gcf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="PV system at STC" src="./images/pvsys_stc.png"&gt; &lt;/p&gt;
&lt;p&gt;The maximum power at STC is 32,119 [W].&lt;/p&gt;
&lt;p&gt;&lt;img alt="PV system with bottom row shaded" src="./images/pvsys_bot_row.png"&gt;&lt;/p&gt;
&lt;p&gt;The maximum power with bottom row shaded) is 29,607 [W]. The calculated the
relative loss, &lt;code&gt;(pvsys_stc – pvys_btm_row) / pvsys_stc&lt;/code&gt;, is 7.8%.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PV string at STC" src="./images/pvstr_stc.png"&gt;&lt;/p&gt;
&lt;p&gt;The string power at STC is 3213 [W].&lt;/p&gt;
&lt;p&gt;&lt;img alt="PV string with bottom row shaded" src="./images/pvstr_bot_row.png"&gt;&lt;/p&gt;
&lt;p&gt;The string power with the bottom row shaded is 721 [W], and the calculated
relative loss, &lt;code&gt;(pvstr_stc – pvstr_btm_row) / pvstr_stc&lt;/code&gt;, is 78%.&lt;/p&gt;
&lt;p&gt;(Sorry the resolution is a bit poor around the knee, this was a quick
simulation using only 100 points.)&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Solar"></category><category term="solar"></category><category term="modeling"></category><category term="code"></category></entry><entry><title>Examples of implicit versus explicit solutions for photovoltaic solar energy systems</title><link href="https://breakingbytes.github.io/examples-of-implicit-versus-explicit-solutions-for-photovoltaic-solar-energy-systems.html" rel="alternate"></link><published>2018-06-22T20:55:00-07:00</published><updated>2018-06-22T20:55:00-07:00</updated><author><name>Mark Mikofski</name></author><id>tag:breakingbytes.github.io,2018-06-22:/examples-of-implicit-versus-explicit-solutions-for-photovoltaic-solar-energy-systems.html</id><summary type="html">&lt;p&gt;Using a numerical solver to model solar power.&lt;/p&gt;</summary><content type="html">&lt;h1 id="full-scale-pv-modeling"&gt;Full Scale PV Modeling&lt;/h1&gt;
&lt;p&gt;I want to explore different ways to find the operating conditions for max power
of a PV system. I'm going to assume that we're using a single diode model (SDM)
which is an analog curcuit of a solar cell composed from a current source, a
diode, and a resistance in parallel, in series with another resistance.&lt;/p&gt;
&lt;p&gt;&lt;img alt="single diode model" src="https://pvpmc.sandia.gov/wp-content/uploads/2012/04/Single-Diode-EC2.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;source: &lt;a href="https://pvpmc.sandia.gov/"&gt;Sandia National Labs: PV Performance Modeling Collaborative&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The cell current in the SDM can't be solved explicitly as a function of cell
voltage without using the Lambert-W function. It can be solved implicitly by
using an iterative solver such as a gradient descent method. And there is an
explicit method that can be used to solve for cell current as a function of an
intermediate parameter, the diode voltage, which can then be used to calculate
the cell current. To get a specific voltage using this explicit parameterized
approach, requires solving for several diode voltages and interpolating.&lt;/p&gt;
&lt;p&gt;A common use of the SDM is to solve for the ideal operating condition of an
entire PV system by assuming all of the cells are identical. Another proposed
usage of the SDM is to model all of the cells in an entire system to account
for their differences either due to variance in manufacturing, ambient
conditions, or degradation. This second problem poses some challenges
computationally for very large systems.&lt;/p&gt;
&lt;p&gt;What is the best method to do full scale PV system modeling? I'm going to skip
the Lambert-W function and focus on implict and explicit methods.&lt;/p&gt;
&lt;h1 id="conclusions"&gt;Conclusions&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The implicit approach is efficient at finding a single operating condition,
even or especially when most of the cells are different, but it's slow at
tracing the entire IV curve.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The implicit approach is also efficient at determining the max power point.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nesting search methods is less efficient than a single closed solution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The explicit method is most efficient at tracing the entire IV curve, even
when every cell is different.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="gist"&gt;Gist&lt;/h1&gt;
&lt;p&gt;The following Gist contains examples for a full scale implicit approach and the
explicit parameterized approach described. The Gist are best viewed on
&lt;a href="http://nbviewer.jupyter.org/gist/mikofski/df318d1f892767ac7c762e732fecaa7f"&gt;nbviewer&lt;/a&gt;.&lt;/p&gt;
&lt;script src="https://gist.github.com/mikofski/df318d1f892767ac7c762e732fecaa7f.js"&gt;&lt;/script&gt;</content><category term="Solar"></category><category term="code"></category><category term="solar"></category><category term="modeling"></category></entry></feed>